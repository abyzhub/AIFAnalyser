/* AIFresourceInfo:com.crmimpl.aiftool.OperationDetails.type
 * This file is generated by the Amdocs data type generation utility on
 * Wed, 16 Oct 2013 18:49:14 IST. Do not edit this file by hand.
 *
 * OperationDetails.java
 *
 * Copyright (c) 1996 to 2009 Amdocs.  All rights reserved.
 *
 * These coded instructions, statements, and computer programs contain
 * unpublished trade secrets and proprietary information of Amdocs
 * and are protected by Federal copyright law and trade secret law.
 * They may not be disclosed to third parties or used or copied or
 * duplicated in any form, in whole or in part, without the prior
 * written consent of Amdocs.
 */

package com.amdocs.bss.tool.aifAnalyser;

public class OperationDetails implements com.amdocs.datatypes.DataType,
		java.io.Serializable, java.lang.Cloneable {

	private static final long serialVersionUID = 117945358803920L;
	public static final String JDK_VERSION = "5.0";

	private java.lang.String Title;
	private java.lang.String Value;
	private java.lang.String ParentFldVal;
	private java.lang.String ChildFldVal;

	public java.lang.String getParentFldVal() {
		return ParentFldVal;
	}

	public void setParentFldVal(java.lang.String parentFldVal) {
		ParentFldVal = parentFldVal;
	}

	public java.lang.String getChildFldVal() {
		return ChildFldVal;
	}

	public void setChildFldVal(java.lang.String childFldVal) {
		ChildFldVal = childFldVal;
	}

	/**
	 * Default constructor. Constructs a
	 * <tt> com.crmimpl.aiftool.OperationDetails </tt> object.
	 */
	public OperationDetails() {
		super();
	}

	/**
	 * @return value of "Title" field.
	 */
	public java.lang.String getTitle() {
		return Title;
	}

	/**
	 * @param value
	 *            of "Title".
	 */
	public void setTitle(java.lang.String value) {
		Title = value;
	}

	/**
	 * @return value of "Value" field.
	 */
	public java.lang.String getValue() {
		return Value;
	}

	/**
	 * @param value
	 *            of "Value".
	 */
	public void setValue(java.lang.String value) {
		Value = value;
	}

	/**
	 * Clone the object.
	 * 
	 * @return returns cloned object.
	 */
	public Object clone() {
		try {
			return super.clone();
		} catch (RuntimeException e) {
			throw e;
		} catch (Exception e) {
			throw new RuntimeException(e);
		}
	}

}
